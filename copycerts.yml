---
- name: Copy cert files to /var/lib/mongodb/cert
  hosts: "{{ target }}"
  become: yes
  tasks:
    
    - name: make openldap directory
      file:
        path: /etc/openldap
        state: directory
        owner: root
        group: root
    
    - name: make ldap certs directory
      file:
        path: /etc/openldap/certs/
        state: directory
        owner: root
        group: root

    - name: get pem
      get_url:
        url: https://va1artifactoryirs.mgt.afsiep.net:443/artifactory/Linux-Shared/MongoDB/keys/ldap.conf
        dest: /etc/openldap/ldap.conf
        owner: mongod
        group: opr-db-admin
        mode: '0600'

    - name: get iep cert
      get_url: 
        url: https://va1artifactoryirs.mgt.afsiep.net:443/artifactory/Linux-Shared/MongoDB/keys/iep_root_intermediate.pem
        dest: /etc/openldap/certs/iep_root_intermediate.pem
        owner: mongod
        group: opr-db-admin
        mode: '0600'
    
    - name: get ca cert
      get_url:
        url: https://va1artifactoryirs.mgt.afsiep.net:443/artifactory/Linux-Shared/MongoDB/keys/CA_Root_Inter.pem
        dest: /var/lib/mongodb/cert/CA_Root_Inter.pem
        owner: mongod
        group: opr-db-admin
        mode: '0600'

    - name: stop mongo.service
      systemd:
        name: mongo
        state: stopped

    - name: find config files on server
      find:
        paths: "/etc/mongo/prod/"
        patterns: "mongod*.cfg"
        recurse: yes
        register: cfgs1

    - name: replace security line in config file
      replace:
        path: "{{ item }}"
        regexp: 'security'
        replace: |- 
          security:
             authorization: \"enabled\"
             clusterAuthMode: x509
             ldap:
                servers: \"opr.afsiep.net:636\"
                bind:
                   queryUser: \"svc_mdbprd_ldap@opr.afsiep.net\"
                   queryPassword: \"MI!iseji7ubope\"
                transportSecurity: tls
                userToDNMapping:
                    \'[
                       {
                          match : \"(.+)\",
                          ldapQuery: \"ou=IEP,DC=opr,DC=afsiep,DC=net??sub?(userPrincipalName={0})\"
                       }
                     ]\' 
                authz:
                   queryTemplate: \"{USER}?memberOf?base\"
           setParameter:
              authenticationMechanisms: PLAIN, SCRAM-SHA-1, SCRAM-SHA-256
                   ocspEnabled: false

      with_items: "{{ cfgs1.files | map(attribute='path')| list }}"

    - name: replace  line in config file
      replace:
        path: "{{ item }}"
        regexp: 'mode: allowTLS'
        replace: |-
          mode: preferTLS
          CAFile: /var/lib/mongodb/cert/CA_Root_Inter.pem
          allowConnectionsWithoutCertificates: true      
      with_items: "{{ cfgs1.files | map(attribute='path')| list }}"

    - name: find mongos config files on server
      find:
        paths: "/etc/mongo/prod/"
        patterns: "mongos*.cfg"
        recurse: yes
        register: cfgs2

    - name: replace security line in config file
      replace:
        path: "{{ item }}"
        regexp: 'security'
        replace: |-
          security:
              clusterAuthMode: x509
              ldap:
                 servers: \"opr.afsiep.net:636\"
                 bind:
                    queryUser: \"svc_mdbprd_ldap@opr.afsiep.net\"
                    queryPassword: \"MI!iseji7ubope\"
                 transportSecurity: tls
                 userToDNMapping:
                    \'[
                       {
                          match : \"(.+)\",
                          ldapQuery: \"ou=IEP,DC=opr,DC=afsiep,DC=net??sub?(userPrincipalName={0})\"
                       }
                     ]\'
           setParameter:
              authenticationMechanisms: PLAIN, SCRAM-SHA-1, SCRAM-SHA-256
                   ocspEnabled: false
      with_items: "{{ cfgs2.files | map(attribute='path')| list }}"

    - name: replace line in mongos config file
      replace:
        path: "{{ item }}"
        regexp: 'mode: allowTLS'
        replace: |-
          mode: preferTLS
          CAFile: /var/lib/mongodb/cert/CA_Root_Inter.pem
          allowConnectionsWithoutCertificates: true
      with_items: "{{ cfgs2.files | map(attribute='path')| list }}"

      #    - name: start mongo.service
      #      systemd:
      #        name: mongo
      #        state: restarted
