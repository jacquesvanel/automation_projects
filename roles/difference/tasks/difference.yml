---
- name: get env
  shell: cat /etc/serverinfo.conf | grep Environment | sed 's/Environment=//g' | tr [:upper:] [:lower:]
  register: envi

- name: show env variable
  debug:
    msg: "{{ envi.stdout }}"    

- name: check type of host (SBX)
  shell:
    cmd: cat /etc/mongo/sbx/{{ item }} | grep -i sharding
  loop: 
    - rs_a.cfg
    - rs_b.cfg
    - rs_c.cfg
  register: replicatset0
  when: envi.stdout == "sbx"
  ignore_errors: yes

- name: Check type of host (for DSIT envi)
  shell:
    cmd: " cat /etc/mongo/dsit_defunct_managed_by_ops_now/{{ item }} | grep -i 'clusterRole: configsvr' "
  loop:
    - rs_a.cfg
    - rs_b.cfg
    - rs_c.cfg
  register: config_dsit    
  when: envi.stdout == "dsit"
  ignore_errors: yes

- name: Check type of host (for DEV)
  shell:
    cmd: " cat /etc/mongo/dev_defunct_managed_by_ops_now/{{ item }} | grep -i clusterRole: configsvr "
  loop:
    - rs_a.cfg
    - rs_b.cfg
    - rs_c.cfg
  register: config_dev
  when: envi.stdout == "dev"
  ignore_errors: yes

- name: Type of host (for DSIT envi)
  debug:
    msg: "{{ ansible_hostname }} is a CONFIG SERVER"
  when: 
    - "'clusterRole: configsvr' in config_dsit.stdout_lines"
    - envi.stdout == "dsit"

- name: Type of host (for DSIT envi)
  debug:
    msg: "{{ ansible_hostname }} is a CONFIG SERVER"
  when: 
    - config_dev.stdout | search('clusterRole: configsvr') 
    - envi.stdout == "dev"

- name: type of host (SBX)
  debug:
    msg: "{{ ansible_hostname }} is a REPLICATSET"
  when:
    - replicatset.stdout | search('sharding') 
    - envi.stdout == "sbx"  
