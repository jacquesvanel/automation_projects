---
#CHECK THE ENVIRONMENT
- name: get env
  shell: cat /etc/serverinfo.conf | grep Environment | sed 's/Environment=//g' | tr [:upper:] [:lower:]
  register: envi
- name: show env variable
  debug:
    msg: "{{ envi.stdout }}"



      ############## SBX ############

#CHECK THE NAME OF THE CONFIF FILE, IN SBX ENVIRONMENT
- name: Checking config file name(SBX - rs_a.cfg)
  shell:
    cmd: ls /etc/mongo/sbx | grep -i rs_a.cfg
  ignore_errors: yes
  when:  envi.stdout == "sbx"
  register: config_file_rs_a_sbx

- name: Checking config file name(SBX - rs_b.cfg)
  shell:
    cmd: ls /etc/mongo/sbx | grep -i rs_b.cfg
  ignore_errors: yes
  when:  envi.stdout == "sbx"
  register: config_file_rs_b_sbx

- name: Checking config file name(SBX - rs_c.cfg)
  shell:
    cmd: ls /etc/mongo/sbx | grep -i rs_c.cfg
  ignore_errors: yes
  when:  envi.stdout == "sbx"
  register: config_file_rs_c_sbx



#CHECING THE TYPE OF MONGODB IN SBX
          #CHECK IF IT IS A CONFIG SERVER
- name: Check type of host (for SBX envi)
  shell:
    cmd: cat /etc/mongo/sbx/{{ item }} | grep -i sharding
  register: config_sbxa
  when:
    - envi.stdout == "sbx"
    - "'rs_a.cfg' in config_file_rs_a_sbx.stdout"
  ignore_errors: yes

- name: Check type of host (for SBX envi)
  shell:
    cmd: cat /etc/mongo/sbx/{{ item }} | grep -i sharding
  register: config_sbxb
  when:
    - envi.stdout == "sbx"
    - "'rs_b.cfg' in config_file_rs_b_sbx.stdout"
  ignore_errors: yes

- name: Check type of host (for SBX envi)
  shell:
    cmd: cat /etc/mongo/sbx/{{ item }} | grep -i sharding
  register: config_sbxc
  when:
    - envi.stdout == "sbx"
    - "'rs_c.cfg' in config_file_rs_c_sbx.stdout"
  ignore_errors: yes
- name: Type of host (for SBX envi)
  debug:
    msg: "{{ ansible_hostname }} is a CONFIG SERVER"
  when: ( "'rs_a.cfg' in config_sbxa.stdout" or "'rs_b.cfg' in config_sbxb.stdout" or "'rs_c.cfg' in config_sbxc.stdout" ) and envi.stdout == "sbx"




    ########## DSIT #########

#CHECK THE NAME OF THE CONFIF FILE, IN DSIT ENVIRONMENT
- name: Checking config file name(DSIT - rs_a.cfg)
  shell:
    cmd: ls /etc/mongo/dsit_defunct_managed_by_ops_now | grep -i rs_a.cfg
  ignore_errors: yes
  when:  envi.stdout == "dsit"
  register: config_file_rs_a_dsit

- name: Checking config file name(DSIT - rs_b.cfg)
  shell:
    cmd: ls /etc/mongo/dsit_defunct_managed_by_ops_now | grep -i rs_b.cfg
  ignore_errors: yes
  when:  envi.stdout == "dsit"
  register: config_file_rs_b_dsit

- name: Checking config file name(DSIT - rs_c.cfg)
  shell:
    cmd: ls /etc/mongo/dsit_defunct_managed_by_ops_now | grep -i rs_c.cfg
  ignore_errors: yes
  when:  envi.stdout == "dsit"
  register: config_file_rs_c_dsit


#CHECING THE TYPE OF MONGODB IN DSIT
        #CHECK IF IT IS A CONFIG SERVER
- name: Check type of host (for DSIT envi)
  shell:
    cmd: " cat /etc/mongo/dsit_defunct_managed_by_ops_now/rs_a.cfg | grep -i 'clusterRole: configsvr' "
  register: config_dsita
  when:
    - envi.stdout == "dsit"
    - "'rs_a.cfg' in config_file_rs_a_dsit.stdout"
  ignore_errors: yes

- name: Check type of host (for DSIT envi)
  shell:
    cmd: " cat /etc/mongo/dsit_defunct_managed_by_ops_now/rs_b.cfg | grep -i 'clusterRole: configsvr' "
  register: config_dsitb
  when:
    - envi.stdout == "dsit"
    - "'rs_b.cfg' in config_file_rs_b_dsit.stdout"
  ignore_errors: yes

- name: Check type of host (for DSIT envi)
  shell:
    cmd: " cat /etc/mongo/dsit_defunct_managed_by_ops_now/rs_c.cfg | grep -i 'clusterRole: configsvr' "
  register: config_dsitc
  when:
    - envi.stdout == "dsit"
    - "'rs_c.cfg' in config_file_rs_c_dsit.stdout"
  ignore_errors: yes

- name: showing output of "config_dsit"
  debug:
    msg: "{{config_dsita.stdout}}"
  when:
    - envi.stdout == "dsit"
    - "'rs_a.cfg' in config_file_rs_a_dsit.stdout"

- name: showing output of "config_dsit"
  debug:
    msg: "{{config_dsitb.stdout}}"
  when:
    - envi.stdout == "dsit"
    - "'rs_b.cfg' in config_file_rs_b_dsit.stdout"

- name: showing output of "config_dsit"
  debug:
    msg: "{{config_dsitc.stdout}}"
  when:
    - envi.stdout == "dsit"
    - "'rs_c.cfg' in config_file_rs_c_dsit.stdout"




       #SHOW THE TYPE OF MONGODB SERVER
- name: Type of host (for DSIT envi)
  debug:
    msg: "{{ ansible_hostname }} is a CONFIG SERVER"
  when: ( "'configsvr' in config_dsita.stdout" or "'configsvr' in config_dsitb.stdout" or "'configsvr' in config_dsitc.stdout" ) and envi.stdout == "dsit"
- name: Type of host (for DSIT envi)
  debug:
    msg: "{{ ansible_hostname }} is a REPLICASET SERVER"
  when: ( "'sharding' not in config_dsita.stdout" or "'sharding' not in config_dsitb.stdout" or "'sharding' not in config_dsitc.stdout" ) and envi.stdout == "dsit"
- name: Type of host (for DSIT envi)
  debug:
    msg: "{{ ansible_hostname }} is a SHARD SERVER"
  when: ( "'shardsvr' in config_dsita.stdout" or "'shardsvr' in config_dsitb.stdout" or "'shardsvr' in config_dsitc.stdout" ) and envi.stdout == "dsit"


    ############# DEV ######################
- name: Check type of host (for DEV)
  shell:
    cmd: " cat /etc/mongo/dev_defunct_managed_by_ops_now/{{ item }} | grep -i clusterRole: configsvr "
  loop:
    - rs_a.cfg
    - rs_b.cfg
    - rs_c.cfg
  register: config_dev
  when: envi.stdout == "dev"
  ignore_errors: yes


- name: type of host (SBX)
  debug:
    msg: "{{ ansible_hostname }} is a REPLICATSET"
  when:
    - replicatset.stdout | search('sharding')
    - envi.stdout == "sbx"
