---
#creates new lvm partition
- set_fact:
    device_name: "{{ item.key }}"
  with_dict: "{{ ansible_devices }}"    
  when: item.key.startswith('nvme') and item.value.partitions == {}

  #- debug:
  #    var: ansible_devices[device_name]

- debug:
    var:  device_name
  
- name: Create partitions
  parted:
    device: "/dev/{{ device_name }}"
    number: 1
    flags: [ lvm ]
    state: present
    #  with_dict: "{{ ansible_devices }}"
  register: part_create
  #  when: item.key.startswith('nvme') and item.value.partitions == {}
  #  with_items: "{{ partition_data }}"

- debug:
    msg: "{{ ansible_lvm }}"

- set_fact:
    vg_name: "{{ item.key }}"
  with_dict: "{{ ansible_lvm.vgs }}"

- name: get vgs
  debug:
    var: vg_name

- debug:
    var: ansible_lvm.vgs[vg_name]

#creates new pvs and extends existing vg to newly created partiton
- name: Create physical volume
  lvg:
    vg: "{{ item.key }}"
    pvs: "/dev/nvme1n1p1,/dev/nvme0n1p2"
  with_dict: "{{ ansible_lvm.vgs }}"
  when: part_create.changed
  register: pv_create
  ignore_errors: yes
