---
#creates new lvm partition
#- debug:
#    msg: "{{ item.key }}"
#  with_dict: "{{ ansible_devices }}"
#  register: device
#  when: item.key.startswith('nvme') and item.value.partitions == {}
  
- name: Create partitions
  parted:
    device: "/dev/{{ item.key }}"
    number: 1
    flags: [ lvm ]
    state: present
  with_dict: "{{ ansible_devices }}"
  register: part_create
  when: item.key.startswith('nvme') and item.value.partitions == {}
  #  with_items: "{{ partition_data }}"

- debug:
    msg: "{{ part_create.value.disk.dev }}"

- name: get vgs
  debug:
    msg: "{{ item.key }}"
  with_dict: "{{ ansible_lvm.vgs }}"
  register: vg_name

#creates new pvs and extends existing vg to newly created partiton
- name: Create physical volume
  lvg:
    vg: "{{ item.key }}"
    pvs: "/dev/{{ device }}p1,/dev/nvme0n1p2"
  with_dict: "{{ ansible_lvm.vgs }}"
  when: part_create.changed
  register: pv_create
  ignore_errors: yes
