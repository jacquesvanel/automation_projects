---
#- debug:
#    msg: "{{ item.value.size_g }}"
#  with_dict: "{{ ansible_lvm.lvs }}"
#  register: opt_size
#  when: item.key == "opt"
  
#- debug:
#    msg: "{{ item.key }}"
#  with_dict: "{{ ansible_devices }}"
#  register: device
#  when: item.key.startswith('nvme') and item.value.partitions == {}

#- name: get vgs
#  debug:
#    msg: "{{ item.key }}"
#  with_dict: "{{ ansible_lvm.vgs }}"
#  register: vg_name

#- debug:
#    msg: "{{ ansible_lvm.vgs }}"

#- set_fact: 
#    vg_name: "{{ item }}"
    #    cacheable: yes
    #  with_items: "{{ ansible_lvm.vgs.keys() }}"

#- debug:
#    msg: 
#     - "{{ ansible_lvm.vgs.keys() }}"
  #with_items: "{{ device.results }}"
  #

- name: find config files on server
  find:
    paths: "/usr/lib/systemd/system/"
    patterns: "mongo*.service"
    recurse: yes
  register: service

- name: Checking Mongo_config service
  systemd:
    name: "{{ item }}"
  register: mongo_service_status
  with_items: "{{ service.files | map(attribute='path')| list }}"
  
- name: Status of All database services
  debug:
    msg: "The status of mongo is {{ item }}"
  loop:
    - "{{mongo_service_status.status.ActiveState}}" 
  #- name: make backup
  #  copy:
  #    src: "{{ item }}"
  #    dest: "/etc/mongo/"
  #    remote_src: yes
  #  with_items: "{{ service.files | map(attribute='path')| list }}"
