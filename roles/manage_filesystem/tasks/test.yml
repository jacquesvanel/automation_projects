---
#- name: Check disk size
#  debug:
#    msg: "{{ ansible_devices[item] }}"
#    msg: "{{ ansible_devices[item].size }}"
#  loop: "{{ ansible_devices.keys()|list }}"
#- name: Collect only facts about hardware
#  setup:
#    gather_subset:
#      - hardware
#      - devices

#- name: Output disks
#  debug:
#    var: hostvars[ansible_hostname].ansible_devices.keys() | list

#- name: Gather system facts
#  gather_facts: yes
- name: devices
  set_fact:
    device_part: "{{ item.key }}"
  with_dict: "{{ ansible_devices }}"
  #  when: item.device.startswith('nvme')

- name: show values
  debug:
    var: ansible_devices[device_part]

- name: show list
  debug:
    var: device_part

- name: Find disk without partition
  debug:
    msg: "{{ item.device }} doesn't have a partition"
  loop: "{{ ansible_devices.keys() | selectattr('partitions', '==', {}) | list }}"
  #  when: item.device.startswith('/dev/nvme')

- name: Find disk without partition
  set_fact:
    unpartitioned_disk: "{{ ansible_devices | selectattr('partitions', 'equals', {}) | selectattr('holders', 'equals', []) | selectattr('size', 'gt', 0) | list }}"
  when: unpartitioned_disk | length > 0

  #- name: Create partition on unpartitioned disk
  #  blockinfile:
  #    path: /tmp/partition_disk.sh
  #    block: |
  #      echo "Creating partition on {{ unpartitioned_disk[0].device }}"
  #      parted {{ unpartitioned_disk[0].device }} mklabel gpt
  #      parted {{ unpartitioned_disk[0].device }} mkpart primary ext4 0% 100%
  #  when: unpartitioned_disk | length > 0

  #- name: Run partition script
  #  command: sh /tmp/partition_disk.sh
  #  when: unpartitioned_disk | length > 0
