---
- name: make directory for /etc/mongo/{{ env }}/scripts/
  file:
    dest: "/etc/mongo/dsit/scripts/"
    state: directory

- name: run shell command 
  shell: mongo ae1rsitlmdb2101:37018/admin -u amkanda -p Qwerty#12345px --authenticationDatabase admin --eval 'db.getMongo().getDBNames()' | sed -e '1,4d'| tr ' ' '\n' | sed 's/\[//g' | sed 's/\]//g' | sed 's/\,//g'| sed '/^[[:space:]]*$/d'
  register: shell_result

- debug:
    msg: |
        "{{ shell_result.stdout }}"

- name: append
  lineinfile:
    dest: "/etc/mongo/dsit/scripts/post_MongoDB_Validate_line.txt"
    line: |
          EXISTING DATABASES ON {{ ansible_hostname }} SERVER ARE
          "{{ shell_result.stdout }}"
    insertafter: EOF
    create: true
    state: present

- name: appendfile
  blockinfile:
    path: "/etc/mongo/dsit/scripts/post_MongoDB_Validate_block.txt"
    create: true
    block: |
          EXISTING DATABASES ON {{ ansible_hostname }} SERVER ARE
          {{ shell_result.stdout }}


- name: run 2nd command
  shell: |
    mongo ae1rsitlmdb2101:37018/admin\
    -u amkanda\
    -p Qwerty#12345px  \
    --authenticationDatabase admin \
    --eval "db.getCollectionNames()" |\
    grep '"'|\
    sed '/UUID/d' |\
    tr ' ' '\n' |\
    sed 's/\[//g' |\
    sed 's/\]//g' |\
    sed 's/\,//g'|\
    sed '/^[[:space:]]*$/d' 
  register: shell2_result

- name: append
  lineinfile:
    dest: "/etc/mongo/dsit/scripts/post_MongoDB_Validate_line.txt"
    line: |
          COLLECTIONS EXIST ON {{ ansible_hostname }} DATABASE ARE
          "{{ shell2_result.stdout }}"
    insertafter: EOF
    create: true
    state: present


#Vrfy_mng=`mongo ${a}:$Port_nmbr/admin -u {{ svc_ansible_automation }} -p {{ svc_ansible_automation_password }} --authenticationDatabase admin --eval "db.getCollectionNames()" | grep '"'| sed '/UUID/d' | wc -l`
#          Col_nmb=0
#               if [ $Vrfy_mng -gt $Col_nmb ]; then
#                    echo ' ' >> $MNG_VAL
#                    echo " STATUS" >> $MNG_VAL
#                    echo " ******" >> $MNG_VAL
#                    echo " MongoDB ${i} is Currently UP and RUNNING" >> $MNG_VAL
#               else
#                    echo ' ' >> $MNG_VAL
#                    echo " STATUS" >> $MNG_VAL
#                    echo " ******" >> $MNG_VAL
#                    echo " MongoDB ${i} is Currently DOWN Plese Verify" >> $MNG_VAL  
