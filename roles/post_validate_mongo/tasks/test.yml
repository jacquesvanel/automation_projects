---
#MNG_VAL=/tmp/MONGODB_VALIDATE/post_MongoDB_Validate.txt
#DBS=`mongo ${a}:$Port_nmbr/admin -u {{ svc_ansible_automation }} -p {{ svc_ansible_automation_password }} --authenticationDatabase admin --eval 'print(db.getMongo().getDBNames())' | grep -i 'config' | sed s/","/' '/g`
#echo "EXISTING DATABASES ON ${a} SERVER ARE: " >> $MNG_VAL
#mongo ${a}:$Port_nmbr/admin -u {{ svc_ansible_automation }} -p {{ svc_ansible_automation_password }} --authenticationDatabase admin --eval 'db.getMongo().getDBNames()' | sed -e '1,4d' >> $MNG_VAL

- name: make directory for /etc/mongo/{{ env }}/scripts/
  file:
    dest: "/etc/mongo/dsit/scripts/"
    state: directory

- name: run shell command 
  shell: mongo ae1rsitlmdb2101:37018/admin -u amkanda -p Qwerty#12345px --authenticationDatabase admin --eval 'db.getMongo().getDBNames()' | sed -e '1,4d'
  register: shell_result

- debug:
    msg: "{{ shell_result.stdout_lines }}"

- name: append
  lineinfile:
    dest: "/etc/mongo/dsit/scripts/post_MongoDB_Validate_line.txt"
    line: "{{ shell_result.stdout_lines }}"
    insertafter: EOF
    create: true
    state: present

- name: appendfile
  blockinfile:
    path: "/etc/mongo/dsit/scripts/post_MongoDB_Validate_block.txt"
    create: true
    block: |
                "EXISTING DATABASES ON ${a} SERVER ARE: "
    "===================================================================="
    "********************************************************************"
                "{{ shell_result.stdout_lines }}"
    "********************************************************************"
    "===================================================================="
  
