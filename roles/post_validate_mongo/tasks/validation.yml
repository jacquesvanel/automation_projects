---
- name: find
  find:
    paths:
      - "/usr/lib/systemd/system/"
      - "/etc/systemd/system/"
    patterns: "mongo*.service"
    excludes: 'mongodb-hugepage-fix.service'
    recurse: yes
  register: service

- name: checking mongo config service
  systemd:
    name: "{{ item }}"
  register: status
  with_items: "{{ service.files | map(attribute='path')| map('regex_replace','\\/usr\\/lib\\/systemd\\/system\\/','')| map('regex_replace','\\/etc\\/systemd\\/system\\/','') | list }}"

- name: status of all services
  debug:
    msg: "The status of {{ item.status.Names }} on {{ ansible_hostname }} is {{ item.status.ActiveState }}"
  with_items: "{{ status.results }}"
  loop_control:
    label: 'status'

#Getting a report of all the logs and their storage
- name: Check disk usage
  shell: df -h | awk '{ print $5, $6 }'
  register: disk_usage

- name: Check disk usage threshold
  debug:
    msg: "{{ item.1 }} is at {{ item.0 }}"
  loop: "{{ disk_usage.stdout_lines }}"
  when: item.0 | int > 85
  register: failed_disks

- name: Fail the playbook if disk usage exceeds threshold
  fail:
    msg: "Disk usage on {{ item.1 }} is at {{ item.0 }}, which exceeds the threshold of 85%."
  loop: "{{ failed_disks.results | map(attribute='item') | list }}"
  when: failed_disks|length > 0



#fail message for disk space

- name: fail module
  fail:
    msg: "The status of {{ item.status.Names }} on {{ ansible_hostname }} is {{ item.status.ActiveState }}"
  when:  item.status.ActiveState == 'failed' or item.status.ActiveState == 'inactive'
  loop: "{{ status.results }}"
  loop_control:
    label: 'status'

