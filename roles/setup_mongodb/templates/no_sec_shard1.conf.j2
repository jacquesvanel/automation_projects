systemLog:
  destination: file
{% if shard1a is defined and ansible_hostname == shard1a %}
  path: "/var/log/mongodb/{{ env }}/sh1-rs_a.log"
{% endif %}
{% if shard1b is defined and ansible_hostname == shard1b %}
  path: "/var/log/mongodb/{{ env }}/sh1-rs_b.log"
{% endif %}
{% if shard1c is defined and ansible_hostname == shard1c %}
  path: "/var/log/mongodb/{{ env }}/sh1-rs_c.log"
{% endif %}
  logAppend: true
  logRotate: reopen
processManagement:
  fork: true 
{% if shard1a is defined and ansible_hostname == shard1a %}
  pidFilePath: "/var/run/mongodb/{{ env }}/mongod-sh1-rs_a.pid"
{% endif %}
{% if shard1b is defined and ansible_hostname == shard1b %}
  pidFilePath: "/var/run/mongodb/{{ env }}/mongod-sh1-rs_b.pid"
{% endif %}
{% if shard1c is defined and ansible_hostname == shard1c %}
  pidFilePath: "/var/run/mongodb/{{ env }}/mongod-sh1-rs_c.pid"
{% endif %}
security:
  keyFile: "/data/{{ env }}/keyfile.pem"
net:
{% if shard1a is defined and ansible_hostname == shard1a %}
  port: {{ shard1a_port }}
{% endif %}
{% if shard1b is defined and ansible_hostname == shard1b %}
  port: {{ shard1b_port }}
{% endif %}
{% if shard1c is defined and ansible_hostname == shard1c %}
  port: {{ shard1c_port }}
{% endif %}
  bindIp: localhost,{{ ansible_hostname }}.opr.afsiep.net
  tls:
   mode: allowTLS
   certificateKeyFile: /var/lib/mongodb/cert/KeyWCert.pem
   certificateKeyFilePassword: {{ cert_password }}
sharding:
  clusterRole: shardsvr
replication:
  replSetName: sh1_{{ env }}
storage:
{% if shard1a is defined and ansible_hostname == shard1a %}
  dbPath: /data/{{ env }}/shard1/rs_a
{% endif %}
{% if shard1b is defined and ansible_hostname == shard1b %}
  dbPath: /data/{{ env }}/shard1/rs_b
{% endif %}
{% if shard1c is defined and ansible_hostname == shard1c %}
  dbPath: /data/{{ env }}/shard1/rs_c
{% endif %}
#  wiredTiger:
#    engineConfig:
#      cacheSizeGB: 2 

